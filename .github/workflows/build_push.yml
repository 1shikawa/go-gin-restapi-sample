name: golang-pipeline-example
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags')
    steps:
      - name: Set up Go 1.18
        uses: actions/setup-go@v1
        with:
          go-version: 1.18

      - name: Check out source code
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Run Unit Tests
        run: go test -v ./...

  docker-build:
    needs: ["test"]
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: go-gin-restapi-example
    steps:
      - name: Check out source code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push docker image
        run: |
          TAG="latest"
          DOCKER_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/${DOCKER_IMAGE_NAME}:$TAG
          echo "Docker image: ${DOCKER_IMAGE}"
          docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
          docker build -t $DOCKER_IMAGE .
          docker push $DOCKER_IMAGE
